import React, { useEffect, useRef } from "react";
import { connect, useDispatch } from "react-redux";
import { LOOKS, MOTION } from "../data/redux/constants/constants";
import CodeLayout from "../layouts/code_layout";
import Events_layout from "../layouts/events_layout";
import LooksLayout from "../layouts/looks_layout";
import MotionLayout from "../layouts/motion_layout/index";
import MidArea from "./MidArea";

function Sidebar({ currentCode }) {
  const motion_ref = useRef();
  const looks_ref = useRef();
  const dispatch = useDispatch();

  useEffect(() => {
    if (currentCode === MOTION) {
      motion_ref.current.scrollTo({
        top: 0,
        behavior: "smooth",
      });
    } else if (currentCode === LOOKS) {
      looks_ref.current.scrollTo({
        top: 0,
        behavior: "smooth",
      });
    }
  }, [currentCode]);

  useEffect(() => {
    window.scrollTo(0, 0);
  }, []);

  return (
    <>
      <div
        style={{
          display: "flex",
          flexDirection: "row",
          zIndex: 20,
          position: "relative",
        }}
      >
        <CodeLayout />
        <div className="flex flex-row" style={{ overflowX: "auto" }}>
          <div className="w-60 flex-none h-full  flex flex-col items-start p-2 border-r border-gray-200 ">
            <div className="motion" ref={motion_ref}>
              Motion
            </div>
            <MotionLayout />
            <div className="motion" ref={looks_ref}>
              Looks
            </div>
            <LooksLayout />
            <div className="motion" ref={looks_ref}>
              Events
            </div>
            <Events_layout />
          </div>
        </div>
      </div>
    </>
  );
}
const mapStateToProps = (state) => {
  return {
    currentCode: state.currentCodeReducer.currentCode,
  };
};
export default connect(mapStateToProps)(Sidebar);
